// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PlakDukkaniREPO.Context;

#nullable disable

namespace PlakDukkaniREPO.Migrations
{
    [DbContext(typeof(PlakDukkaniContext))]
    partial class PlakDukkaniContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PlakDükkaniDATA.Entities.Album", b =>
                {
                    b.Property<int>("AlbumID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AlbumID"));

                    b.Property<string>("Adi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CikisTarihi")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("DukkanID")
                        .HasColumnType("int");

                    b.Property<double>("Fiyati")
                        .HasColumnType("float");

                    b.Property<double?>("IndirimOrani")
                        .HasColumnType("float");

                    b.Property<string>("Sanatci")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("SatisDevamMi")
                        .HasColumnType("bit");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("AlbumID");

                    b.HasIndex("DukkanID");

                    b.ToTable("Albums");

                    b.HasData(
                        new
                        {
                            AlbumID = 1,
                            Adi = "Album 1",
                            CikisTarihi = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedDate = new DateTime(2024, 2, 8, 15, 57, 46, 829, DateTimeKind.Local).AddTicks(3178),
                            DukkanID = 1,
                            Fiyati = 250.0,
                            IndirimOrani = 15.0,
                            Sanatci = "Sanatci 1",
                            SatisDevamMi = true,
                            Status = 0
                        },
                        new
                        {
                            AlbumID = 2,
                            Adi = "Album 2",
                            CikisTarihi = new DateTime(1990, 2, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedDate = new DateTime(2024, 2, 8, 15, 57, 46, 829, DateTimeKind.Local).AddTicks(3192),
                            DukkanID = 1,
                            Fiyati = 750.0,
                            IndirimOrani = 25.0,
                            Sanatci = "Sanatci 2",
                            SatisDevamMi = true,
                            Status = 0
                        },
                        new
                        {
                            AlbumID = 3,
                            Adi = "Album 3",
                            CikisTarihi = new DateTime(1992, 3, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedDate = new DateTime(2024, 2, 8, 15, 57, 46, 829, DateTimeKind.Local).AddTicks(3195),
                            DukkanID = 1,
                            Fiyati = 750.0,
                            IndirimOrani = 0.0,
                            Sanatci = "Sanatci 3",
                            SatisDevamMi = false,
                            Status = 0
                        },
                        new
                        {
                            AlbumID = 4,
                            Adi = "Album 4",
                            CikisTarihi = new DateTime(1945, 3, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedDate = new DateTime(2024, 2, 8, 15, 57, 46, 829, DateTimeKind.Local).AddTicks(3197),
                            DukkanID = 1,
                            Fiyati = 750.0,
                            IndirimOrani = 25.0,
                            Sanatci = "Sanatci 4",
                            SatisDevamMi = true,
                            Status = 0
                        },
                        new
                        {
                            AlbumID = 5,
                            Adi = "Album 5",
                            CikisTarihi = new DateTime(1932, 3, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedDate = new DateTime(2024, 2, 8, 15, 57, 46, 829, DateTimeKind.Local).AddTicks(3198),
                            DukkanID = 1,
                            Fiyati = 750.0,
                            IndirimOrani = 0.0,
                            Sanatci = "Sanatci 5",
                            SatisDevamMi = false,
                            Status = 0
                        },
                        new
                        {
                            AlbumID = 6,
                            Adi = "Album 6",
                            CikisTarihi = new DateTime(1912, 5, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedDate = new DateTime(2024, 2, 8, 15, 57, 46, 829, DateTimeKind.Local).AddTicks(3199),
                            DukkanID = 1,
                            Fiyati = 750.0,
                            IndirimOrani = 15.0,
                            Sanatci = "Sanatci 6",
                            SatisDevamMi = true,
                            Status = 0
                        },
                        new
                        {
                            AlbumID = 7,
                            Adi = "Album 7",
                            CikisTarihi = new DateTime(1999, 3, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedDate = new DateTime(2024, 2, 8, 15, 57, 46, 829, DateTimeKind.Local).AddTicks(3201),
                            DukkanID = 1,
                            Fiyati = 750.0,
                            IndirimOrani = 0.0,
                            Sanatci = "Sanatci 7",
                            SatisDevamMi = true,
                            Status = 0
                        },
                        new
                        {
                            AlbumID = 8,
                            Adi = "Album 8",
                            CikisTarihi = new DateTime(2000, 4, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedDate = new DateTime(2024, 2, 8, 15, 57, 46, 829, DateTimeKind.Local).AddTicks(3202),
                            DukkanID = 1,
                            Fiyati = 750.0,
                            IndirimOrani = 20.0,
                            Sanatci = "Sanatci 8",
                            SatisDevamMi = false,
                            Status = 0
                        },
                        new
                        {
                            AlbumID = 9,
                            Adi = "Album 9",
                            CikisTarihi = new DateTime(1965, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedDate = new DateTime(2024, 2, 8, 15, 57, 46, 829, DateTimeKind.Local).AddTicks(3203),
                            DukkanID = 1,
                            Fiyati = 750.0,
                            IndirimOrani = 25.0,
                            Sanatci = "Sanatci 9",
                            SatisDevamMi = true,
                            Status = 0
                        },
                        new
                        {
                            AlbumID = 10,
                            Adi = "Album 10",
                            CikisTarihi = new DateTime(1970, 3, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedDate = new DateTime(2024, 2, 8, 15, 57, 46, 829, DateTimeKind.Local).AddTicks(3204),
                            DukkanID = 1,
                            Fiyati = 750.0,
                            IndirimOrani = 50.0,
                            Sanatci = "Sanatci 10",
                            SatisDevamMi = true,
                            Status = 0
                        },
                        new
                        {
                            AlbumID = 11,
                            Adi = "Album 11",
                            CikisTarihi = new DateTime(1920, 6, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedDate = new DateTime(2024, 2, 8, 15, 57, 46, 829, DateTimeKind.Local).AddTicks(3206),
                            DukkanID = 1,
                            Fiyati = 750.0,
                            IndirimOrani = 30.0,
                            Sanatci = "Sanatc 11",
                            SatisDevamMi = true,
                            Status = 0
                        },
                        new
                        {
                            AlbumID = 12,
                            Adi = "Album 12",
                            CikisTarihi = new DateTime(1925, 7, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedDate = new DateTime(2024, 2, 8, 15, 57, 46, 829, DateTimeKind.Local).AddTicks(3207),
                            DukkanID = 1,
                            Fiyati = 750.0,
                            IndirimOrani = 10.0,
                            Sanatci = "Sanatci 12",
                            SatisDevamMi = true,
                            Status = 0
                        },
                        new
                        {
                            AlbumID = 13,
                            Adi = "Album 13",
                            CikisTarihi = new DateTime(2005, 10, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedDate = new DateTime(2024, 2, 8, 15, 57, 46, 829, DateTimeKind.Local).AddTicks(3208),
                            DukkanID = 1,
                            Fiyati = 750.0,
                            IndirimOrani = 0.0,
                            Sanatci = "Sanatci 13",
                            SatisDevamMi = true,
                            Status = 0
                        });
                });

            modelBuilder.Entity("PlakDükkaniDATA.Entities.Dukkan", b =>
                {
                    b.Property<int>("DukkanID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DukkanID"));

                    b.Property<string>("Adi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("DukkanID");

                    b.ToTable("Dukkans");

                    b.HasData(
                        new
                        {
                            DukkanID = 1,
                            Adi = "Eskiler",
                            CreatedDate = new DateTime(2024, 2, 8, 15, 57, 46, 829, DateTimeKind.Local).AddTicks(6051),
                            Status = 0
                        });
                });

            modelBuilder.Entity("PlakDükkaniDATA.Entities.Yonetici", b =>
                {
                    b.Property<int>("YoneticiID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("YoneticiID"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("DukkanID")
                        .HasColumnType("int");

                    b.Property<string>("KullaniciAdi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("YoneticiID");

                    b.HasIndex("DukkanID");

                    b.ToTable("Yoneticis");

                    b.HasData(
                        new
                        {
                            YoneticiID = 1,
                            CreatedDate = new DateTime(2024, 2, 8, 15, 57, 46, 829, DateTimeKind.Local).AddTicks(6531),
                            DukkanID = 1,
                            KullaniciAdi = "a",
                            Password = "a",
                            Status = 0
                        });
                });

            modelBuilder.Entity("PlakDükkaniDATA.Entities.Album", b =>
                {
                    b.HasOne("PlakDükkaniDATA.Entities.Dukkan", "Dukkan")
                        .WithMany("Albums")
                        .HasForeignKey("DukkanID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Dukkan");
                });

            modelBuilder.Entity("PlakDükkaniDATA.Entities.Yonetici", b =>
                {
                    b.HasOne("PlakDükkaniDATA.Entities.Dukkan", "Dukkan")
                        .WithMany("Yoneticis")
                        .HasForeignKey("DukkanID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Dukkan");
                });

            modelBuilder.Entity("PlakDükkaniDATA.Entities.Dukkan", b =>
                {
                    b.Navigation("Albums");

                    b.Navigation("Yoneticis");
                });
#pragma warning restore 612, 618
        }
    }
}
