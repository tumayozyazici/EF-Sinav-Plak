// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PlakDukkaniREPO.Context;

#nullable disable

namespace PlakDukkaniREPO.Migrations
{
    [DbContext(typeof(PlakDukkaniContext))]
    [Migration("20240206114318_initial")]
    partial class initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PlakDükkaniDATA.Entities.Album", b =>
                {
                    b.Property<int>("AlbumID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AlbumID"));

                    b.Property<string>("Adi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CikisTarihi")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("DukkanID")
                        .HasColumnType("int");

                    b.Property<double>("Fiyati")
                        .HasColumnType("float");

                    b.Property<double?>("IndirimOrani")
                        .HasColumnType("float");

                    b.Property<string>("Sanatci")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("SatisDevamMi")
                        .HasColumnType("bit");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("AlbumID");

                    b.HasIndex("DukkanID");

                    b.ToTable("Albums");

                    b.HasData(
                        new
                        {
                            AlbumID = 1,
                            Adi = "Adını Kalbime Yaz",
                            CikisTarihi = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedDate = new DateTime(2024, 2, 6, 14, 43, 18, 504, DateTimeKind.Local).AddTicks(9920),
                            DukkanID = 1,
                            Fiyati = 250.0,
                            IndirimOrani = 15.0,
                            Sanatci = "Tarkan",
                            SatisDevamMi = true,
                            Status = 0
                        },
                        new
                        {
                            AlbumID = 2,
                            Adi = "Help",
                            CikisTarihi = new DateTime(1965, 3, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedDate = new DateTime(2024, 2, 6, 14, 43, 18, 504, DateTimeKind.Local).AddTicks(9933),
                            DukkanID = 1,
                            Fiyati = 750.0,
                            IndirimOrani = 25.0,
                            Sanatci = "Beatles",
                            SatisDevamMi = true,
                            Status = 0
                        });
                });

            modelBuilder.Entity("PlakDükkaniDATA.Entities.Dukkan", b =>
                {
                    b.Property<int>("DukkanID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DukkanID"));

                    b.Property<string>("Adi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("DukkanID");

                    b.ToTable("Dukkans");

                    b.HasData(
                        new
                        {
                            DukkanID = 1,
                            Adi = "Eskiler",
                            CreatedDate = new DateTime(2024, 2, 6, 14, 43, 18, 505, DateTimeKind.Local).AddTicks(614),
                            Status = 0
                        });
                });

            modelBuilder.Entity("PlakDükkaniDATA.Entities.Yonetici", b =>
                {
                    b.Property<int>("YoneticiID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("YoneticiID"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("DukkanID")
                        .HasColumnType("int");

                    b.Property<string>("KullaniciAdi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("YoneticiID");

                    b.HasIndex("DukkanID");

                    b.ToTable("Yoneticis");

                    b.HasData(
                        new
                        {
                            YoneticiID = 1,
                            CreatedDate = new DateTime(2024, 2, 6, 14, 43, 18, 505, DateTimeKind.Local).AddTicks(973),
                            DukkanID = 1,
                            KullaniciAdi = "Fatih",
                            Password = "Fatih1962",
                            Status = 0
                        });
                });

            modelBuilder.Entity("PlakDükkaniDATA.Entities.Album", b =>
                {
                    b.HasOne("PlakDükkaniDATA.Entities.Dukkan", "Dukkan")
                        .WithMany("Albums")
                        .HasForeignKey("DukkanID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Dukkan");
                });

            modelBuilder.Entity("PlakDükkaniDATA.Entities.Yonetici", b =>
                {
                    b.HasOne("PlakDükkaniDATA.Entities.Dukkan", "Dukkan")
                        .WithMany("Yoneticis")
                        .HasForeignKey("DukkanID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Dukkan");
                });

            modelBuilder.Entity("PlakDükkaniDATA.Entities.Dukkan", b =>
                {
                    b.Navigation("Albums");

                    b.Navigation("Yoneticis");
                });
#pragma warning restore 612, 618
        }
    }
}
